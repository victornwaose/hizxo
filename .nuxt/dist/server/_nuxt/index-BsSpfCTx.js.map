{"version":3,"file":"index-BsSpfCTx.js","sources":["../../../../virtual:public?%2Fimages%2Ficon-add-to-cart.svg","../../../../components/DesertCard.vue","../../../../virtual:public?%2Fimages%2Fillustration-empty-cart.svg","../../../../virtual:public?%2Fimages%2Ficon-remove-item.svg","../../../../virtual:public?%2Fimages%2Ficon-carbon-neutral.svg","../../../../virtual:public?%2Fimages%2Ficon-order-confirmed.svg","../../../../components/CartModal.vue","../../../../components/Cart.vue","../../../../pages/index.vue"],"sourcesContent":["import { publicAssetsURL } from '#internal/nuxt/paths';export default publicAssetsURL(\"/images/icon-add-to-cart.svg\")","<template>\r\n  <div class=\"rounded-2xl overflow-hidden relative flex flex-col\">\r\n    <div class=\"relative flex-grow\">\r\n      <img \r\n        :src=\"dessert?.image\" \r\n        :alt=\"dessert.name\" \r\n        class=\"w-full rounded-2xl h-72 object-cover\" \r\n        :class=\"{'border-4 border-orange-600': inCart}\" \r\n      />\r\n    </div>\r\n\r\n    <!-- Button to add to cart or show quantity control -->\r\n    <div v-if=\"!inCart\" class=\"group w-[70%] justify-center text-sm z-10 py-3 px-3 shadow-md hover:border bg-white text-black font-bold rounded-full hover:border-orange-600 flex items-center self-center -mt-5\">\r\n      <img src=\"/images/icon-add-to-cart.svg\" alt=\"Add to Cart\" class=\"mr-3\" />\r\n      <span class=\"group-hover:text-orange-600 cursor-pointer\" @click=\"handleAddToCart\">Add to Cart</span>\r\n    </div>\r\n\r\n    <div v-else :class=\"{'border-2 border-orange-600': inCart}\" class=\"flex items-center z-10 justify-between w-[70%] py-3 px-3 shadow-md bg-white text-black font-bold rounded-full self-center -mt-5\">\r\n      <button \r\n        @click=\"decreaseQuantity\" \r\n        class=\"text-lg cursor-pointer border border-orange-600 bg-orange-600 text-white rounded-full w-8 h-8 flex items-center justify-center\"\r\n      >\r\n        -\r\n      </button>\r\n      <span class=\"text-sm\">{{ quantity }}</span>\r\n      <button \r\n        @click=\"increaseQuantity\" \r\n        class=\"text-lg cursor-pointer border border-orange-600 bg-orange-600 text-white rounded-full w-8 h-8 flex items-center justify-center\"\r\n      >\r\n        +\r\n      </button>\r\n    </div>\r\n\r\n    <!-- Content -->\r\n    <div class=\"p-4 mt-5 text-left\">\r\n      <h2 class=\"text-xs text-gray-600 font-light mb-1\">{{ dessert.name }}</h2>\r\n      <p class=\"text-base font-semibold mb-1\">{{ dessert.desc }}</p>\r\n      <p class=\"text-orange-600 font-bold text-sm\">${{ dessert.price }}.00</p>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport { defineProps, defineEmits, ref } from \"vue\";\r\nimport type { Dessert } from \"../utils/types\";\r\n\r\nconst props = defineProps<{\r\n  dessert: Dessert;\r\n}>();\r\n\r\nconst emit = defineEmits<{\r\n  (e: 'add-to-cart', item: Dessert, quantity: number): void;\r\n  (e: 'remove-from-cart', item: Dessert): void; \r\n}>();\r\n\r\n\r\nconst quantity = ref(1);\r\n\r\n\r\nconst inCart = ref(false);\r\n\r\nconst handleAddToCart = () => {\r\n  inCart.value = true;\r\n  emit('add-to-cart', props.dessert, quantity.value);\r\n};\r\n\r\nconst increaseQuantity = () => {\r\n  quantity.value++;\r\n  emit('add-to-cart', props.dessert, quantity.value);\r\n};\r\n\r\nconst decreaseQuantity = () => {\r\n  if (quantity.value > 1) {\r\n    quantity.value--;\r\n    emit('add-to-cart', props.dessert, quantity.value);\r\n  } else {\r\n    \r\n    inCart.value = false;\r\n    emit('remove-from-cart', props.dessert);\r\n  }\r\n};\r\n</script>\r\n","import { publicAssetsURL } from '#internal/nuxt/paths';export default publicAssetsURL(\"/images/illustration-empty-cart.svg\")","import { publicAssetsURL } from '#internal/nuxt/paths';export default publicAssetsURL(\"/images/icon-remove-item.svg\")","import { publicAssetsURL } from '#internal/nuxt/paths';export default publicAssetsURL(\"/images/icon-carbon-neutral.svg\")","import { publicAssetsURL } from '#internal/nuxt/paths';export default publicAssetsURL(\"/images/icon-order-confirmed.svg\")","<template>\r\n  <div v-if=\"showModal\" class=\"fixed inset-0 bg-opacity-50 flex justify-center items-center z-50\">\r\n    <div class=\"bg-white p-6 rounded-lg w-[60%] mx-auto md:w-96\">\r\n      <img src=\"/images/icon-order-confirmed.svg\" alt=\"Order confirmed\" class=\"my-4\" />\r\n      <h3 class=\"text-xl font-bold text-gray-900 mb-1\">Order Confirmed</h3>\r\n      <span class=\"text-xs text-orange-900\">We hope you enjoyed your food!</span>\r\n\r\n      <ul class=\"mt-4\">\r\n        <li v-for=\"(item, index) in cart\" :key=\"index\" class=\"flex justify-between items-center border-b border-gray-200 py-2\">\r\n          <div class=\"flex flex-col\">\r\n            <span class=\"text-base font-bold\">{{ item.name }}</span>\r\n            <div class=\"flex gap-4 text-sm mt-2\">\r\n              <span class=\"text-orange-600 font-bold\">{{ item.quantity }}X</span>\r\n              <span class=\"text-gray-600 font-bold\">${{ (item.price * item.quantity).toFixed(2) }}</span>\r\n            </div>\r\n          </div>\r\n        </li>\r\n      </ul>\r\n\r\n      <div class=\"mt-4 flex justify-between items-center\">\r\n        <span class=\"font-medium text-gray-600\">Total:</span>\r\n        <span class=\"font-bold text-lg\">${{ totalPrice.toFixed(2) }}</span>\r\n      </div>\r\n\r\n      <button @click=\"resetAndClose\" class=\"mt-4 w-full bg-orange-600 py-2 rounded-3xl text-white\">Start New Order</button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport { defineProps, defineEmits, computed, ref, watch } from \"vue\";\r\nimport type { CartItem } from \"../utils/types\";\r\n\r\n\r\nconst props = defineProps<{\r\n  showModal: boolean;\r\n  cart: CartItem[];\r\n}>();\r\n\r\nconst emit = defineEmits<{\r\n  (e: 'close-modal'): void;\r\n  (e: 'reset-cart'): void; \r\n}>();\r\n\r\nconst originalCart = ref<CartItem[]>(JSON.parse(JSON.stringify(props.cart))); \r\n\r\n\r\nconst totalPrice = computed(() => {\r\n  return props.cart.reduce((total, item) => total + item.price * item.quantity, 0);\r\n});\r\n\r\n\r\nconst resetAndClose = () => {\r\n \r\n  emit('reset-cart', originalCart.value);\r\n\r\n\r\n  emit('close-modal');\r\n};\r\n\r\nwatch(() => props.cart, (newCart) => {\r\n  originalCart.value = JSON.parse(JSON.stringify(newCart));\r\n});\r\n</script>\r\n","<template>\r\n  <div class=\"mt-6 px-4  py-6 bg-white rounded-2xl shadow-lg\">\r\n    <h2 class=\"text-2xl text-orange-600 font-bold mb-4\">Your Cart ({{ cart.length }})</h2>\r\n\r\n    <div v-if=\"cart.length === 0\" class=\"flex flex-col items-center\">\r\n      <img\r\n        src=\"/images/illustration-empty-cart.svg\"\r\n        alt=\"Empty Cart\"\r\n        class=\"w-32 h-32 mb-2\"\r\n      />\r\n      <p class=\"text-gray-500\">Your added items will appear here</p>\r\n    </div>\r\n\r\n    <div v-else>\r\n      <ul>\r\n        <li\r\n          v-for=\"(item, index) in cart\"\r\n          :key=\"index\"\r\n          class=\"flex justify-between items-center  border-b border-gray-200 py-2\"\r\n        >\r\n          <div class=\"flex flex-col\">\r\n            <span class=\"text-base font-bold\">{{ item.name }}</span>\r\n            <div class=\"flex gap-4 text-sm mt-2\">\r\n              <span class=\"text-orange-600 font-bold\">{{ item.quantity }}X</span>\r\n              <span class=\"text-gray-500 font-medium\">@ ${{ item.price }}</span>\r\n              <span class=\"text-gray-600 font-bold\">${{ (item.price * item.quantity) }}</span> \r\n            </div>\r\n          </div>\r\n          \r\n          <img\r\n            src=\"/images/icon-remove-item.svg\"\r\n            alt=\"remove\"\r\n            class=\"border border-gray-300 rounded-full p-2 cursor-pointer hover:bg-gray-100\"\r\n            @click=\"handleRemoveItem(item)\"\r\n          />\r\n        </li>\r\n      </ul>\r\n\r\n      <div class=\"mt-4 flex justify-between items-center\">\r\n        <span class=\"font-medium text-gray-600 text-sm\">Order Total:</span>\r\n        <span class=\"font-bold text-lg\">${{ totalPrice }}</span>\r\n      </div>\r\n\r\n      <div class=\"flex gap-3 p-4 bg-orange-50 mt-4\">\r\n        <img src=\"/images/icon-carbon-neutral.svg\" alt=\"carbon neutral\">\r\n        <p class=\"text-sm\">This is a <span class=\"font-bold\">carbon-neutral</span> delivery</p>\r\n      </div>\r\n\r\n      <button @click=\"openModal\" class=\"bg-orange-600 px-6 rounded-3xl w-full mt-5 py-2 text-white\">Confirm Order</button>\r\n    </div>\r\n  </div>\r\n\r\n\r\n  <CartModal\r\n    :showModal=\"showModal\"\r\n    :cart=\"cart\"\r\n    @close-modal=\"closeModal\"\r\n   @reset-cart=\"resetCart\"\r\n  />\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport { defineProps, defineEmits, computed, ref } from \"vue\";\r\nimport type { CartItem } from \"../utils/types\";\r\nimport CartModal from './CartModal.vue';\r\n\r\nconst props = defineProps<{\r\n  initialCart: CartItem[];\r\n}>();\r\n\r\nconst emit = defineEmits<{\r\n  (e: 'remove-item', item: CartItem): void;\r\n}>();\r\n\r\nconst cart = ref(props.initialCart);\r\n\r\nconst totalPrice = computed(() => {\r\n  return cart.value.reduce((total, item) => total + item.price * item.quantity, 0);\r\n});\r\n\r\nconst showModal = ref(false);\r\n\r\nconst openModal = () => {\r\n  showModal.value = true;\r\n};\r\n\r\nconst closeModal = () => {\r\n  showModal.value = false;\r\n};\r\n\r\nconst handleRemoveItem = (item: CartItem) => {\r\n  emit('remove-item', item);\r\n};\r\nconst handleClearCart = () => {\r\n  cart.value = []; \r\n  showModal.value = false; \r\n};\r\n</script>\r\n\r\n\r\n","<template>\r\n  <div class=\"w-[90%] mx-auto p-4 min-h-screen\">\r\n    <div class=\"flex flex-col md:flex-row\">\r\n      <div class=\"w-full md:w-[70%]\">\r\n        <h1 class=\"text-3xl font-bold mb-7\">Desserts</h1>\r\n        <div class=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\r\n          <DessertCard \r\n            v-for=\"(item, index) in desserts\" \r\n            :key=\"index\" \r\n            :dessert=\"item\" \r\n            @add-to-cart=\"addToCart\" \r\n          />\r\n        </div>\r\n      </div>\r\n  \r\n      <div class=\"w-full md:w-[30%] ml-0 md:ml-6\">\r\n        <Cart :initialCart=\"cart\" @remove-item=\"removeFromCart\" /> \r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport { ref } from \"vue\";\r\nimport type { Dessert, CartItem } from \"../utils/types\";\r\nimport DessertCard from \"../components/DesertCard.vue\";\r\nimport Cart from \"../components/Cart.vue\"; \r\n\r\n\r\nconst desserts = ref<Dessert[]>([\r\n  { id: 1, name: \"Waffle with Berries\", desc: \"Waffle with Berries\", price: 11, image: \"/images/image-cake-desktop.jpg\" },\r\n  { id: 2, name: \"Vanilla Bean Crème Brûlée\", desc: \"Waffle with berries\", price: 12, image: \"/images/image-baklava-mobile.jpg\" },\r\n  { id: 3, name: \"Macaron Mix of Five\", desc: \"Waffle with Berries\", price: 10, image: \"/images/image-macaron-desktop.jpg\" },\r\n  { id: 4, name: \"Macaron Mix of Five\", desc: \"Waffle with Berries\", price: 9, image: \"/images/image-brownie-desktop.jpg\" },\t\r\n  { id: 5, name: \"Macaron Mix of Five\", desc: \"Waffle with Berries\", price: 8, image: \"/images/image-panna-cotta-mobile.jpg\" },\r\n  { id: 6, name: \"Waffle\", desc: \"Waffle with Berries\", price: 4, image: \"/images/image-meringue-tablet.jpg\" },\r\n  { id: 7, name: \"Waffle\", desc: \"Waffle with Berries\", price: 14, image: \"/images/image-tiramisu-tablet.jpg\" },\r\n  { id: 8, name: \"Waffle\", desc: \"Waffle with Berries\", price: 3, image: \"/images/image-creme-brulee-thumbnail.jpg\" },\r\n  { id: 8, name: \"Waffle\", desc: \"Waffle with Berries\", price: 17, image: \"/images/image-tiramisu-desktop.jpg\" },\r\n]);\r\n\r\n\r\nconst cart = ref<CartItem[]>([]);\r\n\r\n\r\nconst addToCart = (item: Dessert) => {\r\n  const existingItem = cart.value.find(cartItem => cartItem.id === item.id);\r\n  if (existingItem) {\r\n    existingItem.quantity += 1;\r\n  } else {\r\n    const newItem: CartItem = { ...item, quantity: 1 };\r\n    cart.value.push(newItem);\r\n  }\r\n};\r\n\r\n\r\nconst removeFromCart = (item: CartItem) => {\r\n  const itemIndex = cart.value.findIndex(cartItem => cartItem.id === item.id);\r\n  if (itemIndex !== -1) {\r\n    cart.value.splice(itemIndex, 1); \r\n  }\r\n};\r\n</script>\r\n"],"names":[],"mappings":";;;AAAuD,MAAe,eAAA,gBAAgB,8BAA8B;;;;;;;;;ACwD9G,UAAA,WAAW,IAAI,CAAC;AAGhB,UAAA,SAAS,IAAI,KAAK;;;;;;;;;;;;;;;;;;;AC3D+B,MAAe,eAAA,gBAAgB,qCAAqC;ACApE,MAAe,aAAA,gBAAgB,8BAA8B;ACA7D,MAAe,aAAA,gBAAgB,iCAAiC;ACAhE,MAAe,aAAA,gBAAgB,kCAAkC;;;;;;;;;;ACkCxH,UAAM,QAAQ;AAUR,UAAA,eAAe,IAAgB,KAAK,MAAM,KAAK,UAAU,MAAM,IAAI,CAAC,CAAC;AAGrE,UAAA,aAAa,SAAS,MAAM;AACzB,aAAA,MAAM,KAAK,OAAO,CAAC,OAAO,SAAS,QAAQ,KAAK,QAAQ,KAAK,UAAU,CAAC;AAAA,IAAA,CAChF;AAWD,UAAM,MAAM,MAAM,MAAM,CAAC,YAAY;AACnC,mBAAa,QAAQ,KAAK,MAAM,KAAK,UAAU,OAAO,CAAC;AAAA,IAAA,CACxD;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACID,UAAM,QAAQ;AAQR,UAAA,OAAO,IAAI,MAAM,WAAW;AAE5B,UAAA,aAAa,SAAS,MAAM;AACzB,aAAA,KAAK,MAAM,OAAO,CAAC,OAAO,SAAS,QAAQ,KAAK,QAAQ,KAAK,UAAU,CAAC;AAAA,IAAA,CAChF;AAEK,UAAA,YAAY,IAAI,KAAK;AAM3B,UAAM,aAAa,MAAM;AACvB,gBAAU,QAAQ;AAAA,IACpB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC3DA,UAAM,WAAW,IAAe;AAAA,MAC9B,EAAE,IAAI,GAAG,MAAM,uBAAuB,MAAM,uBAAuB,OAAO,IAAI,OAAO,iCAAiC;AAAA,MACtH,EAAE,IAAI,GAAG,MAAM,6BAA6B,MAAM,uBAAuB,OAAO,IAAI,OAAO,mCAAmC;AAAA,MAC9H,EAAE,IAAI,GAAG,MAAM,uBAAuB,MAAM,uBAAuB,OAAO,IAAI,OAAO,oCAAoC;AAAA,MACzH,EAAE,IAAI,GAAG,MAAM,uBAAuB,MAAM,uBAAuB,OAAO,GAAG,OAAO,oCAAoC;AAAA,MACxH,EAAE,IAAI,GAAG,MAAM,uBAAuB,MAAM,uBAAuB,OAAO,GAAG,OAAO,uCAAuC;AAAA,MAC3H,EAAE,IAAI,GAAG,MAAM,UAAU,MAAM,uBAAuB,OAAO,GAAG,OAAO,oCAAoC;AAAA,MAC3G,EAAE,IAAI,GAAG,MAAM,UAAU,MAAM,uBAAuB,OAAO,IAAI,OAAO,oCAAoC;AAAA,MAC5G,EAAE,IAAI,GAAG,MAAM,UAAU,MAAM,uBAAuB,OAAO,GAAG,OAAO,2CAA2C;AAAA,MAClH,EAAE,IAAI,GAAG,MAAM,UAAU,MAAM,uBAAuB,OAAO,IAAI,OAAO,qCAAqC;AAAA,IAAA,CAC9G;AAGK,UAAA,OAAO,IAAgB,EAAE;AAGzB,UAAA,YAAY,CAAC,SAAkB;AAC7B,YAAA,eAAe,KAAK,MAAM,KAAK,cAAY,SAAS,OAAO,KAAK,EAAE;AACxE,UAAI,cAAc;AAChB,qBAAa,YAAY;AAAA,MAAA,OACpB;AACL,cAAM,UAAoB,EAAE,GAAG,MAAM,UAAU,EAAE;AAC5C,aAAA,MAAM,KAAK,OAAO;AAAA,MAAA;AAAA,IAE3B;AAGM,UAAA,iBAAiB,CAAC,SAAmB;AACnC,YAAA,YAAY,KAAK,MAAM,UAAU,cAAY,SAAS,OAAO,KAAK,EAAE;AAC1E,UAAI,cAAc,IAAI;AACf,aAAA,MAAM,OAAO,WAAW,CAAC;AAAA,MAAA;AAAA,IAElC;;;;;;;;;;;;;;;;;;;;;;;;;"}